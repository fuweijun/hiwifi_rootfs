#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

START=01
STOP=99

system_dump_soft_ver() {
	local hwf_soft_ver_path="/proc/sys/kernel/hwf_soft_ver"
	if [ -e "$hwf_soft_ver_path" ]; then
		cat /etc/.build >$hwf_soft_ver_path
	fi
}

systime_bdinfo() {
	bdt=`bdtime -g`
	if [ -n "$bdt" ]; then
		time=`echo $bdt | awk -F '-' '{print $1"-"$2"-"$3" "$4":"$5":"$6}'`
		test -n "$time" && date -s "$time"
	else
		romtime=`cat /rom/etc/.build |awk '{print $NF}'`	# get time from rom build info, set bdinfo and systime
		yy=20${romtime:0:2}
		mm=${romtime:2:2}
		dd=${romtime:4:2}
		hh=${romtime:7:2}
		mi=${romtime:9:2}
		ss=${romtime:11:2}
		time="$yy-$mm-$dd $hh:$mi:$ss"
		bdt="$yy-$mm-$dd-$hh-$mi-$ss"
		test -n "$time" && date -s "$time"
		test -n "$bdt" && bdtime -s "$bdt"
	fi
}

system_config() {
	local cfg="$1"

	local hostname conloglevel timezone

	config_get hostname "$cfg" hostname 'OpenWrt'
	echo "$hostname" > /proc/sys/kernel/hostname

	config_get conloglevel "$cfg" conloglevel
	config_get buffersize "$cfg" buffersize
	[ -z "$conloglevel" -a -z "$buffersize" ] || dmesg ${conloglevel:+-n $conloglevel} ${buffersize:+-s $buffersize}

	config_get timezone "$cfg" timezone 'UTC'
	echo "$timezone" > /tmp/TZ

	config_get zonename "$cfg" zonename
	[ -n "$zonename" ] && [ -f "/usr/share/zoneinfo/$zonename" ] && ln -s "/usr/share/zoneinfo/$zonename" /tmp/localtime

	# apply timezone to kernel
	date -k
}

apply_uci_config() {
	sh -c '. /lib/functions.sh; include /lib/config; uci_apply_defaults'
}

config_lua_binfmt() {
	mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc
	echo ":lua:E::lua::/usr/bin/lua:" >/proc/sys/fs/binfmt_misc/register	
}

set_core_pattern() {

	local rom_version=""

	mkdir -p /tmp/coredump
	[ -e /proc/sys/kernel/core_pattern ] && {
		if [ -e "/etc/.build" ]; then

			rom_version=$(awk '{if (NR == 1){print $1}}' /etc/.build)

			#The max len of string rom_veriosn is 32.
			echo "/tmp/coredump/%e.%p.%s.%t.${rom_version:0:32}.core" > /proc/sys/kernel/core_pattern
		fi
	}

	return 0
}

start() {
	config_lua_binfmt
	[ -f /proc/mounts ] || /sbin/mount_root
	[ -f /proc/jffs2_bbc ] && echo "S" > /proc/jffs2_bbc
	[ -f /proc/net/vlan/config ] && vconfig set_name_type DEV_PLUS_VID_NO_PAD

	###limit the size of var 1MB
	mkdir -p /var

	###mkdir /var subdirs 
	mkdir -p /var/run
	mkdir -p /var/log
	mkdir -p /var/lock
	mkdir -p /var/state
	mkdir -p /var/etc


	###mkdir /tmp subdirs
	mkdir -p /tmp/storage
	mkdir -p /tmp/infogather
	mkdir -p /tmp/coredump
	mkdir -p /tmp/data
	mkdir -p /tmp/cryptdata

	###Currently, just for complitation
	mkdir -p /tmp/run
	mkdir -p /tmp/log
	mkdir -p /tmp/lock
	mkdir -p /tmp/state
	mkdir -p /tmp/etc

	### set coredump generating path and formate.
	set_core_pattern

	mkdir -p /tmp/.uci
	chmod 0700 /tmp/.uci
	touch /var/log/wtmp
	touch /var/log/lastlog
	touch /tmp/resolv.conf.auto
	ln -sf /tmp/resolv.conf.auto /tmp/resolv.conf
	grep -q debugfs /proc/filesystems && mount -t debugfs debugfs /sys/kernel/debug
	[ "$FAILSAFE" = "true" ] && touch /tmp/.failsafe

	system_dump_soft_ver

	load_modules /etc/modules.d/*

	# allow wifi modules time to settle
	sleep 1

	/sbin/wifi detect > /tmp/wireless.tmp
	[ -s /tmp/wireless.tmp ] && {
		cat /tmp/wireless.tmp >> /etc/config/wireless
	}
	rm -f /tmp/wireless.tmp

	apply_uci_config
	config_load system
	config_foreach system_config system 
	systime_bdinfo
	
	killall -q hotplug2
	[ -x /sbin/hotplug2 ] && /sbin/hotplug2 --override --persistent \
			--set-rules-file /etc/hotplug2.rules \
			--set-coldplug-cmd /sbin/udevtrigger \
			--max-children 1 >/dev/null 2>&1 &

	# create /dev/root if it doesn't exist
	[ -e /dev/root -o -h /dev/root ] || {
		rootdev=$(awk 'BEGIN { RS=" "; FS="="; } $1 == "root" { print $2 }' < /proc/cmdline)
		[ -n "$rootdev" ] && ln -s "$rootdev" /dev/root
	}
}

stop() {
	echo "Do nothing." > /dev/null
}
