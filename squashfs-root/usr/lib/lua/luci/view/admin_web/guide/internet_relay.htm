<%
local ver  = require "luci.version"
local util  = require "luci.util"
local deviceReq = "radio0.network1"
local http = require "luci.http"
local tw = require "tw"
local n = require "luci.controller.api.network"

local autotype = luci.util.fliter_unsafe(luci.http.urlencode(luci.http.formvalue("autotype")))
local guide_net = luci.util.fliter_unsafe(luci.http.urlencode(luci.http.formvalue("guide_net")))

local typeReq
local mac = tw.get_mac()

%>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title><%=luci.i18n.translate("key_company")%>｜首次安装－上网方式</title>
<link rel="stylesheet" href="<%=resource%>/guide/css/style.css?v=<%=ver.svnRevNum%>" type="text/css"/>
<script src="<%=resource%>/guide/js/jquery-1.8.2.min.js?v=<%=ver.svnRevNum%>"></script>
<script src="<%=resource%>/guide/js/custom_checkbox_and_radio.js?v=<%=ver.svnRevNum%>"></script>
<script src="<%=resource%>/guide/js/jquery.dropkick-1.0.0.js?v=<%=ver.svnRevNum%>"></script>
<script src="<%=resource%>/guide/js/application.js?v=<%=ver.svnRevNum%>"></script>
<script src="<%=resource%>/guide/js/twx_guide.js?v=<%=ver.svnRevNum%>"></script>
</head>
<body>
	<div id="page">
		<div id="header">
			<h1><span id="logo"><%=luci.i18n.translate("key_company")%>｜首次安装</span></h1>
		</div><!-- /header -->
		<div id="content">
			<form id="form" method="post">
                <p id="type_info"><h2 style="font-size: 1.3em;">选择上网方式</h2></p>
                <select value="上网方式" id="s1" class="drop radius" name="type">
                    <option value="dhcp">DHCP自动上网<%if autotype == 'dhcp' then%>(来自检测)<%end%></option>
                    <option value="pppoe">宽带拨号<%if autotype == 'pppoe' then%>(来自检测)<%end%></option>
                    <option value="static">手动<%if autotype == 'static' then%>(来自检测)<%end%></option>
                    <option value="wisp" selected="selected">无线中继<%if autotype == 'wisp' then%>(来自检测)<%end%></option>
                    <option value="nonet">暂不上网(校园上网需插件支持)</option>
                </select>
				<div class="line"></div>
				<div id="ssid_auto_div">
    				<p class="tit">请选择无线网络<a id="refresh_ap_list" href="javascript:void(0);" class="short">刷新</a></p>
    				<div class="item">
                        <span class="manual"><a id="change_ssid_input" href="javascript:void(0);">手动输入</a></span>
        				<select id="s2" class="drop radius" name="ssid">
        			  	</select>
    			  	</div>
			  	</div>
                <div class="item" id="ssid_input_div" style="display:none">
                    <p class="tit">请输入无线网络名称：</p>
                    <span class="manual"><a id="change_auto_input" href="javascript:void(0);">自动搜索</a></span>
    				<input type="text" id="ssid_input" class="txt radius" placeholder="无线网络名称"></input>
                </div>
			  	<input type="hidden" name="channel" class="txt" value="">
                <input type="hidden" name="bssid" class="txt" value="">
                <input type="hidden" name="encryption" class="txt" value="">
                <input type="hidden" name="guide" class="txt" value="1">
                <div id="key_div" style="display:none">
                <p class="tit">密码：</p>
				<input type="text" class="txt radius J_wisp_pw" blank="true" maxLength="63" minLength="8" placeholder="密码" name="key" />
				</div>
				<p class="error"></p>
				<p id="net_change_show" style="display:none; background: #FFD400; border-color: #FFD400; color: #000; font-size: 14px;"></p>
				<a id="submit" href="javascript:void(0);" class="btn radius">连接上网</a>
				<a id="forse_next" href="javascript:void();" class="link skip" style="display:none">跳过</a>
				<p id="timer_view" href="javascript:void();" ></p>
			</form>

		</div><!-- /content -->
				
		<div id="footer">
		</div><!-- /footer -->
	</div><!-- /page -->
</body>
<script type="text/javascript">
var autotype = '<%=autotype%>';
var guide_net = '<%=guide_net%>';
var codeResp_set = '<%=codeResp_set%>';
var typeReq = '<%=typeReq%>';
var aplist_cache = new Array();
var checking = false;
var check_count = 0;
var bssid='';
var timeout = 36000;
var sec;
var this_mac = '<%=mac%>';
var auto_scan = 1;
var submit_auto_scan;
var self_ssid;

function check_guide_net(){
    if(guide_net == '1'){
        $("#net_change_show").show();
        $("#net_change_show").html('正在检测中继是否正常');

        checking = true;
        check_count = 0;
        setTimeout("check_system_info(link_success)", 2000);
    }
}

function key_display(value){
    if(value == true){
        $("#key_div").show();
    }else{
        $("#key_div").hide();
    }
}

$(window).load(function() {
    init_wifi_info(function(rsp){
        self_ssid = rsp.ssid;
    })
    
    check_guide_net();
    $("#s1").change(function(){
        var type = $("#s1").val();
        if(type == "dhcp"){
            window.location.href='<%=luci.dispatcher.build_url("admin_web", "guide", "dhcp")%>?autotype='+autotype;
        }else if(type == "pppoe"){
            window.location.href='<%=luci.dispatcher.build_url("admin_web", "guide", "pppoe")%>?autotype='+autotype;
        }else if(type == "static"){
            window.location.href='<%=luci.dispatcher.build_url("admin_web", "guide", "static")%>?autotype='+autotype;
        }else if(type == "wisp"){
            window.location.href='<%=luci.dispatcher.build_url("admin_web", "guide", "wisp")%>?autotype='+autotype;
        }else if(type == "nonet"){
            window.location.href='<%=luci.dispatcher.build_url("admin_web", "guide", "internet_success")%>'+'?type=nonet&autotype='+autotype;
        }
    });

    $("#s2").change(function(){
        var selectedIndex = $(this).get(0).selectedIndex;
        if(selectedIndex < aplist_cache.length){
            var ap = aplist_cache[selectedIndex];
            var ssid = ap['ssid'];
            var key = ap['key'];
            var encryption = ap['auth'];
            var channel = ap['channel'];
            var bssid = ap['bssid'];
            set_input_val(ssid, key, encryption, channel, bssid);
            
            if(encryption == "none"){
                $("input[name='key']").attr('blank', 'true');
                key_display(false);
            }else{
                $("input[name='key']").attr('blank', 'false');
                key_display(true);
            }
        }
    });

    listerenterkeydown(function(){
        form_submit();
    });
    
    $("#submit").click(function(){
        form_submit();
    });

    $("#forse_next").click(function(){
        link_success();
    });

    $("#change_ssid_input").click(function(){
        $(".error").html('');
        $("#s2").attr("name", "ssid_select");
        $("#ssid_auto_div").hide();
        $("#ssid_input_div").show();
        $("#ssid_input").attr("name", "ssid");
        $("input[name='key']").val('');
        key_display(true);
        $("input[name='key']").attr('blank', 'true');
        set_input_val('', '', 'psk2', 6, '');
        auto_scan = 0;
    });

    $("#change_auto_input").click(function(){
        $(".error").html('');
        $("#s2").attr("name", "ssid");
        $("#ssid_auto_div").show();
        $("#ssid_input").attr("name", "ssid_input");
        $("#ssid_input").val('');
        $("#ssid_input_div").hide();
        key_display(false);
        set_input_val('', '', '', '', '');
        $("#refresh_ap_list").trigger('click');
        auto_scan = 1;
    });
});

function form_submit(){
    $("#forse_next").hide();
    if(auto_scan == 1){
        
    }else{
        if($("input[name='key']").val() == ''){
            $("input[name='key']").attr('blank', 'true');
            $("input[name='encryption']").val('none');
        }else{
            $("input[name='key']").attr('blank', 'false');
            $("input[name='encryption']").val('psk2');
        }
    }
    $(".J_wisp_pw").lengthCheck({'blurCheck':true,'errorClass':'input-error'});
    if($(".input-error").size() > 0){
        return;
    }
    if(checking == true){
       return;
    }
    submit_auto_scan = auto_scan;
    $("#submit").html('正在连接中...');
    $(".error").html('');
    $("#net_change_show").hide();
    bssid = $("input[name='bssid']").val();
    checking = true;
    sec = Math.ceil(timeout/1000);
    
    twx_timer(sec, function(time){
        if(time > 0 && checking == true){
            $("#submit").html("正在连接中("+time+'秒)');
        }else{
            $("#submit").html('连接上网');
            return false;
        }
    })
    
    var request_date =  $("#form").serializeArray(); 
    $.ajax({
          url: "<%=luci.dispatcher.build_url("api", "wifi","set_bridge")%>",
          cache: false,
          type: "POST",
          dataType: "json",
          data: request_date,
          timeout:10000,
          success: function(rsp){
            if(rsp.code == 0){
                $("#net_change_show").show();
                $("#net_change_show").html('无线将会重启，如果断开，请手动连接');
                
                checking = true;
                check_count = 0;
                setTimeout("check_system_info(link_success)", 3000);
            }else{
                $(".error").html(rsp.msg);
                $("#submit").html('连接上网');
                checking = false;
            }
          },
          error: function(){
            $("#net_change_show").show();
            $("#net_change_show").html('无线重启中，请重新连接');
            
            checking = true;
            check_count = 0;
            setTimeout("check_system_info(link_success)", 3000);
          }
    });
}

function update_btn(){
    if(checking == true){
        if(sec > 0){
            var mod = sec % 3;
            if(mod == 0){
                $("#submit").html("正在连接中...");
            }else if(mod == 1){
                $("#submit").html("正在连接中..");
            }else if(mod == 2){
                $("#submit").html("正在连接中.");
            }else{
                $("#submit").html("正在连接中...");
            }
            setTimeout("update_btn()", 1000);
            sec = sec - 1;
        }else{
            $("#submit").html("连接上网"); 
        }
    }else{
       $("#submit").html("连接上网"); 
    }
}

function link_success(){
    window.location.href='<%=luci.dispatcher.build_url("admin_web", "guide","internet_success")%>';
}

function check_network_connect(link_success){
    if(checking != true){
        return;
    }
    check_count ++;
    if(check_count > 40){
        $("#net_change_show").html('请确认中继的网络是否正常，密码是否正确');
        $("#submit").html('连接上网');
        checking = false;
        return;
    }
    
    $.ajax({
      url: "<%=luci.dispatcher.build_url("api", "wifi","get_bridge")%>",
      cache: false,
      dataType: "json",
      success: function(rsp){
          if(rsp.code == 0){
            var status = rsp.status;
            var is_internet_connect = rsp.is_connect;
            if(submit_auto_scan == 1){
                if(bssid != rsp.bssid){
                    checking = false;
                    $("#net_change_show").html('密码错误，请重新连接');
                    $("#submit").html('连接上网');
                    return;
                }
            }
            
            if(is_internet_connect == 1 || is_internet_connect == '1'){
                checking = false;
                if(typeof(link_success) == "function"){
                    $("#net_change_show").html('设置成功，正在跳转...');
                    link_success();
                }
            }
          }
          
          if(checking){
            $("#net_change_show").html('正在检测中继是否正常');
            setTimeout("check_network_connect(link_success)", 3000);
          }
      },
      error :function(){
          $("#net_change_show").html('提示：连接超时,<br/>请重新连回'+self_ssid);
          setTimeout("check_network_connect(link_success)", 3000);
      }
    });
}

function set_input_val(ssid, key, encryption, channel, bssid){
    $("input[name='encryption']").val(encryption);
    $("input[name='channel']").val(channel);
    $("input[name='bssid']").val(bssid);
    $("input[name='key']").val(key);
}

function get_wan_info(success, failed){
    //network/get_wan_info 
    $.ajax({
        url: "<%=luci.dispatcher.build_url("api", "network","get_wan_info")%>",
        cache: false,
        dataType: "json",
        success: function(rsp){
            uptime = rsp.uptime;
            if(rsp.is_eth_link == 0){
                failed('网线未插');
            } else if (rsp.is_internet_link == 0){
                failed('未连接');
            } else {
                success();
            }
        },error:function(){
            failed('get_wan_info error');
        }
    });
}

var update_view;
var wait_times = 0;

function refresh_aplist(callback){ 
    $(".error").html("");
    $("#net_change_show").html('');
    update_view = callback;
    //wifi/wifi_ctl_scan 
    $("#refresh_ap_list").html('刷新中...');
    $("#s2").html('');
    var request_date = {}; 
    $.getJSON("<%=luci.dispatcher.build_url("api", "wifi","wifi_ctl_scan")%>",request_date,function(rsp) 
    {
        if(rsp.code == 0){
            wait_times = 0;
            setTimeout("fill_select(update_view)", 3000);
        }else{
            if(typeof(update_view) == "function"){
                update_view();
            }
            $("#refresh_ap_list").html('刷新');
        }
    }).fail(function(){
        if(typeof(update_view) == "function"){
            update_view();
        }
        $("#refresh_ap_list").html('刷新');
        $(".error").html("刷新失败，请确认连接了路由器，然后重试");
    });
}

// 是否是手动输入
function is_user_input(){
    if(auto_scan == 1){
        return false;
    }else{
        return true;
    }
}

function fill_select(update_view){
    wait_times = wait_times + 1;
    //wifi/get_aplist 
    $("#refresh_ap_list").html('刷新中...');
    $("#s2").html('');
    aplist_cache = new Array();
    var request_date = {}; 
    $.getJSON("<%=luci.dispatcher.build_url("api", "wifi","get_aplist")%>",request_date,function(rsp) 
    {
        if(is_user_input()){
          return;
        }
            
        //生成列表
        if (rsp.code == 0){
            var arr_aplist = rsp.aplist; 
            var inp_v
            var inp_show
            var inp_encryption
            var inp_bssid
            var inp_key=""
            var inp_html
            var need_pwd = 1
            var rssi_level = 0
            
            if(wait_times < 4){
                if(arr_aplist.length == 0){
                    setTimeout("fill_select(update_view)", 2000);
                    return;
                }
            }
            
            var ap;
            for (var i=0;i<arr_aplist.length;i++)
            {
                ap = arr_aplist[i];
                inp_v = ap['ssid'];
                try{
                    inp_v = decodeURIComponent(inp_v);
                }catch(e){
                }
                if(inp_v == ""){continue;}  // 不支持隐藏 ssid TODO：- 
                inp_rssi = ap['rssi'];
                inp_channel = ap['channel'];
                inp_encryption = ap['auth'];
                inp_bssid = ap['bssid'];
                inp_key = ap['key'];
                if (!inp_key){
                    inp_key = ""
                }
                inp_show = inp_v;
                if (inp_v == "" || inp_encryption=="wep") {
                    continue;
                }
                
                if(inp_encryption == "none"){
                    need_pwd = 0
                }else{
                    need_pwd = 1
                }
                
                rssi_level = cal_rssi_level(inp_rssi)
                try{
                    if(inp_show.length > 14){
                        inp_show = inp_show.substr(0, 12)+'..'
                    }
                }catch(e){
                }
                inp_html = '<option value="'+inp_v+'" rssi="'+rssi_level+'" pw="'+need_pwd+'">'+inp_show+'</option>';
                
                aplist_cache.push(ap);
                //aplist_cache[aplist_cache.length] = ap;
                $("#s2").append(inp_html);
                if(i == 0){
                    set_input_val(inp_v, inp_key, inp_encryption, inp_channel, inp_bssid);
                    if(need_pwd == 1){
                        key_display(true);
                    }else{
                        key_display(false);
                    }
                }
            }
        } else {
        }
        if(typeof(update_view) == "function"){
            update_view();
        }
        $("#refresh_ap_list").html('刷新');
    }).fail(function(){
        if(typeof(update_view) == "function"){
            update_view();
        }
        $("#refresh_ap_list").html('刷新');
    });
}

function cal_rssi_level(rssi){
    try{
       var level = Math.ceil(rssi/25);
       return level;
    }catch(e){
       return 0;
    }
}

function check_system_info(link_success){
    twx_ajax('<%=luci.dispatcher.build_url("api", "system","get_info")%>',
    {},
    {success: function(rsp){
        if(this_mac == rsp.mac){
            $("#net_change_show").html('');
            checking = true;
            check_count = 0;
            check_network_connect(link_success);
        }else{
            $("#net_change_show").show();
            $("#net_change_show").html('提示：当前设备连接到了其他无线网络,<br/>请重新连回'+self_ssid);
            checking = false;
            check_count = 0;
            setTimeout("check_system_info(link_success)", 3000);
        }
    },
    error: function(){
        $("#net_change_show").show();
        $("#net_change_show").html('提示：连接超时,<br/>请重新连回'+self_ssid);
        checking = false;
        check_count = 0;
        setTimeout("check_system_info(link_success)", 3000);
    }}, 15000);
}

function init_wifi_info(callback){
    var request_date = {"device":"radio0.network1"};
    $.getJSON("<%=luci.dispatcher.build_url("api", "wifi","view_detail")%>",request_date,function(rsp) {  
        if(rsp.code == 0){
            if(callback && typeof(callback) == "function"){
                callback(rsp);
            }
        }  else {
            setTimeout("init_wifi_info", 3000);
        }
    });
}
</script>
</html>
